// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.0
// source: api/mesh/v1alpha1/condition_route.proto

package v1alpha1

import (
	reflect "reflect"
	sync "sync"
)

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"

	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

import (
	_ "github.com/apache/dubbo-kubernetes/api/mesh"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConditionRoute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Conditions:
	//
	//	*ConditionRoute_ConditionsV3
	//	*ConditionRoute_ConditionsV3X1
	Conditions isConditionRoute_Conditions `protobuf_oneof:"conditions"`
}

func (x *ConditionRoute) Reset() {
	*x = ConditionRoute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mesh_v1alpha1_condition_route_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConditionRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConditionRoute) ProtoMessage() {}

func (x *ConditionRoute) ProtoReflect() protoreflect.Message {
	mi := &file_api_mesh_v1alpha1_condition_route_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConditionRoute.ProtoReflect.Descriptor instead.
func (*ConditionRoute) Descriptor() ([]byte, []int) {
	return file_api_mesh_v1alpha1_condition_route_proto_rawDescGZIP(), []int{0}
}

func (m *ConditionRoute) GetConditions() isConditionRoute_Conditions {
	if m != nil {
		return m.Conditions
	}
	return nil
}

func (x *ConditionRoute) GetConditionsV3() *ConditionRouteV3 {
	if x, ok := x.GetConditions().(*ConditionRoute_ConditionsV3); ok {
		return x.ConditionsV3
	}
	return nil
}

func (x *ConditionRoute) GetConditionsV3X1() *ConditionRouteV3X1 {
	if x, ok := x.GetConditions().(*ConditionRoute_ConditionsV3X1); ok {
		return x.ConditionsV3X1
	}
	return nil
}

type isConditionRoute_Conditions interface {
	isConditionRoute_Conditions()
}

type ConditionRoute_ConditionsV3 struct {
	ConditionsV3 *ConditionRouteV3 `protobuf:"bytes,1,opt,name=conditionsV3,proto3,oneof"`
}

type ConditionRoute_ConditionsV3X1 struct {
	ConditionsV3X1 *ConditionRouteV3X1 `protobuf:"bytes,2,opt,name=conditionsV3x1,proto3,oneof"`
}

func (*ConditionRoute_ConditionsV3) isConditionRoute_Conditions() {}

func (*ConditionRoute_ConditionsV3X1) isConditionRoute_Conditions() {}

type ConditionRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From *ConditionRuleFrom `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To   []*ConditionRuleTo `protobuf:"bytes,2,rep,name=to,proto3" json:"to,omitempty"`
}

func (x *ConditionRule) Reset() {
	*x = ConditionRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mesh_v1alpha1_condition_route_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConditionRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConditionRule) ProtoMessage() {}

func (x *ConditionRule) ProtoReflect() protoreflect.Message {
	mi := &file_api_mesh_v1alpha1_condition_route_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConditionRule.ProtoReflect.Descriptor instead.
func (*ConditionRule) Descriptor() ([]byte, []int) {
	return file_api_mesh_v1alpha1_condition_route_proto_rawDescGZIP(), []int{1}
}

func (x *ConditionRule) GetFrom() *ConditionRuleFrom {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ConditionRule) GetTo() []*ConditionRuleTo {
	if x != nil {
		return x.To
	}
	return nil
}

type ConditionRuleFrom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Match string `protobuf:"bytes,1,opt,name=match,proto3" json:"match,omitempty"`
}

func (x *ConditionRuleFrom) Reset() {
	*x = ConditionRuleFrom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mesh_v1alpha1_condition_route_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConditionRuleFrom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConditionRuleFrom) ProtoMessage() {}

func (x *ConditionRuleFrom) ProtoReflect() protoreflect.Message {
	mi := &file_api_mesh_v1alpha1_condition_route_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConditionRuleFrom.ProtoReflect.Descriptor instead.
func (*ConditionRuleFrom) Descriptor() ([]byte, []int) {
	return file_api_mesh_v1alpha1_condition_route_proto_rawDescGZIP(), []int{2}
}

func (x *ConditionRuleFrom) GetMatch() string {
	if x != nil {
		return x.Match
	}
	return ""
}

type ConditionRuleTo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Match  string `protobuf:"bytes,1,opt,name=match,proto3" json:"match,omitempty"`
	Weight int32  `protobuf:"varint,2,opt,name=weight,proto3" json:"weight,omitempty"` // default value will be handled by application logic
}

func (x *ConditionRuleTo) Reset() {
	*x = ConditionRuleTo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mesh_v1alpha1_condition_route_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConditionRuleTo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConditionRuleTo) ProtoMessage() {}

func (x *ConditionRuleTo) ProtoReflect() protoreflect.Message {
	mi := &file_api_mesh_v1alpha1_condition_route_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConditionRuleTo.ProtoReflect.Descriptor instead.
func (*ConditionRuleTo) Descriptor() ([]byte, []int) {
	return file_api_mesh_v1alpha1_condition_route_proto_rawDescGZIP(), []int{3}
}

func (x *ConditionRuleTo) GetMatch() string {
	if x != nil {
		return x.Match
	}
	return ""
}

func (x *ConditionRuleTo) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

type ConditionRouteV3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigVersion string   `protobuf:"bytes,1,opt,name=configVersion,proto3" json:"configVersion,omitempty"`
	Priority      int32    `protobuf:"varint,2,opt,name=priority,proto3" json:"priority,omitempty"`
	Enabled       bool     `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Force         bool     `protobuf:"varint,4,opt,name=force,proto3" json:"force,omitempty"`
	Runtime       bool     `protobuf:"varint,5,opt,name=runtime,proto3" json:"runtime,omitempty"`
	Key           string   `protobuf:"bytes,6,opt,name=key,proto3" json:"key,omitempty"`
	Scope         string   `protobuf:"bytes,7,opt,name=scope,proto3" json:"scope,omitempty"`
	Conditions    []string `protobuf:"bytes,8,rep,name=conditions,proto3" json:"conditions,omitempty"`
}

func (x *ConditionRouteV3) Reset() {
	*x = ConditionRouteV3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mesh_v1alpha1_condition_route_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConditionRouteV3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConditionRouteV3) ProtoMessage() {}

func (x *ConditionRouteV3) ProtoReflect() protoreflect.Message {
	mi := &file_api_mesh_v1alpha1_condition_route_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConditionRouteV3.ProtoReflect.Descriptor instead.
func (*ConditionRouteV3) Descriptor() ([]byte, []int) {
	return file_api_mesh_v1alpha1_condition_route_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ConditionRouteV3) GetConfigVersion() string {
	if x != nil {
		return x.ConfigVersion
	}
	return ""
}

func (x *ConditionRouteV3) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *ConditionRouteV3) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ConditionRouteV3) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *ConditionRouteV3) GetRuntime() bool {
	if x != nil {
		return x.Runtime
	}
	return false
}

func (x *ConditionRouteV3) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ConditionRouteV3) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *ConditionRouteV3) GetConditions() []string {
	if x != nil {
		return x.Conditions
	}
	return nil
}

type ConditionRouteV3X1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigVersion string           `protobuf:"bytes,1,opt,name=configVersion,proto3" json:"configVersion,omitempty"`
	Scope         string           `protobuf:"bytes,2,opt,name=scope,proto3" json:"scope,omitempty"` // must be chosen from `service` and `application`
	Key           string           `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`     // specifies which service or application the rule body acts on
	Force         bool             `protobuf:"varint,4,opt,name=force,proto3" json:"force,omitempty"`
	Runtime       bool             `protobuf:"varint,5,opt,name=runtime,proto3" json:"runtime,omitempty"`
	Enabled       bool             `protobuf:"varint,6,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Conditions    []*ConditionRule `protobuf:"bytes,8,rep,name=conditions,proto3" json:"conditions,omitempty"`
}

func (x *ConditionRouteV3X1) Reset() {
	*x = ConditionRouteV3X1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mesh_v1alpha1_condition_route_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConditionRouteV3X1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConditionRouteV3X1) ProtoMessage() {}

func (x *ConditionRouteV3X1) ProtoReflect() protoreflect.Message {
	mi := &file_api_mesh_v1alpha1_condition_route_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConditionRouteV3X1.ProtoReflect.Descriptor instead.
func (*ConditionRouteV3X1) Descriptor() ([]byte, []int) {
	return file_api_mesh_v1alpha1_condition_route_proto_rawDescGZIP(), []int{0, 1}
}

func (x *ConditionRouteV3X1) GetConfigVersion() string {
	if x != nil {
		return x.ConfigVersion
	}
	return ""
}

func (x *ConditionRouteV3X1) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *ConditionRouteV3X1) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ConditionRouteV3X1) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *ConditionRouteV3X1) GetRuntime() bool {
	if x != nil {
		return x.Runtime
	}
	return false
}

func (x *ConditionRouteV3X1) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ConditionRouteV3X1) GetConditions() []*ConditionRule {
	if x != nil {
		return x.Conditions
	}
	return nil
}

var File_api_mesh_v1alpha1_condition_route_proto protoreflect.FileDescriptor

var file_api_mesh_v1alpha1_condition_route_proto_rawDesc = []byte{
	0x0a, 0x27, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x64, 0x75, 0x62, 0x62, 0x6f,
	0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x16,
	0x61, 0x70, 0x69, 0x2f, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x86, 0x06, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x4c, 0x0a, 0x0c, 0x63, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x56, 0x33, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x64, 0x75, 0x62, 0x62, 0x6f, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x33, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x56, 0x33, 0x12, 0x52, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x56, 0x33, 0x78, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x64, 0x75, 0x62, 0x62, 0x6f, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x33, 0x78, 0x31, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x56, 0x33, 0x78, 0x31, 0x1a, 0xd8, 0x01, 0x0a, 0x02,
	0x76, 0x33, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66,
	0x6f, 0x72, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0xe2, 0x01, 0x0a, 0x04, 0x76, 0x33, 0x78, 0x31, 0x12,
	0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f,
	0x72, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x42, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x75,
	0x62, 0x62, 0x6f, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52,
	0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x83, 0x01, 0xaa, 0x8c,
	0x89, 0xa6, 0x01, 0x18, 0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0xaa, 0x8c, 0x89, 0xa6,
	0x01, 0x10, 0x12, 0x0e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0xaa, 0x8c, 0x89, 0xa6, 0x01, 0x06, 0x22, 0x04, 0x6d, 0x65, 0x73, 0x68, 0xaa, 0x8c,
	0x89, 0xa6, 0x01, 0x04, 0x52, 0x02, 0x10, 0x01, 0xaa, 0x8c, 0x89, 0xa6, 0x01, 0x12, 0x3a, 0x10,
	0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0xaa, 0x8c, 0x89, 0xa6, 0x01, 0x13, 0x3a, 0x11, 0x12, 0x0f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0xaa, 0x8c, 0x89, 0xa6, 0x01, 0x02, 0x68,
	0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x81, 0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c,
	0x65, 0x12, 0x3a, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x64, 0x75, 0x62, 0x62, 0x6f, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x75, 0x6c, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x34, 0x0a,
	0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x75, 0x62, 0x62,
	0x6f, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x6f, 0x52,
	0x02, 0x74, 0x6f, 0x22, 0x29, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x75, 0x6c, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x22, 0x3f,
	0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x54,
	0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42,
	0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x70,
	0x61, 0x63, 0x68, 0x65, 0x2f, 0x64, 0x75, 0x62, 0x62, 0x6f, 0x2d, 0x6b, 0x75, 0x62, 0x65, 0x72,
	0x6e, 0x65, 0x74, 0x65, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_mesh_v1alpha1_condition_route_proto_rawDescOnce sync.Once
	file_api_mesh_v1alpha1_condition_route_proto_rawDescData = file_api_mesh_v1alpha1_condition_route_proto_rawDesc
)

func file_api_mesh_v1alpha1_condition_route_proto_rawDescGZIP() []byte {
	file_api_mesh_v1alpha1_condition_route_proto_rawDescOnce.Do(func() {
		file_api_mesh_v1alpha1_condition_route_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_mesh_v1alpha1_condition_route_proto_rawDescData)
	})
	return file_api_mesh_v1alpha1_condition_route_proto_rawDescData
}

var file_api_mesh_v1alpha1_condition_route_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_api_mesh_v1alpha1_condition_route_proto_goTypes = []interface{}{
	(*ConditionRoute)(nil),     // 0: dubbo.mesh.v1alpha1.ConditionRoute
	(*ConditionRule)(nil),      // 1: dubbo.mesh.v1alpha1.ConditionRule
	(*ConditionRuleFrom)(nil),  // 2: dubbo.mesh.v1alpha1.ConditionRuleFrom
	(*ConditionRuleTo)(nil),    // 3: dubbo.mesh.v1alpha1.ConditionRuleTo
	(*ConditionRouteV3)(nil),   // 4: dubbo.mesh.v1alpha1.ConditionRoute.v3
	(*ConditionRouteV3X1)(nil), // 5: dubbo.mesh.v1alpha1.ConditionRoute.v3x1
}
var file_api_mesh_v1alpha1_condition_route_proto_depIdxs = []int32{
	4, // 0: dubbo.mesh.v1alpha1.ConditionRoute.conditionsV3:type_name -> dubbo.mesh.v1alpha1.ConditionRoute.v3
	5, // 1: dubbo.mesh.v1alpha1.ConditionRoute.conditionsV3x1:type_name -> dubbo.mesh.v1alpha1.ConditionRoute.v3x1
	2, // 2: dubbo.mesh.v1alpha1.ConditionRule.from:type_name -> dubbo.mesh.v1alpha1.ConditionRuleFrom
	3, // 3: dubbo.mesh.v1alpha1.ConditionRule.to:type_name -> dubbo.mesh.v1alpha1.ConditionRuleTo
	1, // 4: dubbo.mesh.v1alpha1.ConditionRoute.v3x1.conditions:type_name -> dubbo.mesh.v1alpha1.ConditionRule
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_api_mesh_v1alpha1_condition_route_proto_init() }
func file_api_mesh_v1alpha1_condition_route_proto_init() {
	if File_api_mesh_v1alpha1_condition_route_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_mesh_v1alpha1_condition_route_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConditionRoute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mesh_v1alpha1_condition_route_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConditionRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mesh_v1alpha1_condition_route_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConditionRuleFrom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mesh_v1alpha1_condition_route_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConditionRuleTo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mesh_v1alpha1_condition_route_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConditionRouteV3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mesh_v1alpha1_condition_route_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConditionRouteV3X1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_mesh_v1alpha1_condition_route_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ConditionRoute_ConditionsV3)(nil),
		(*ConditionRoute_ConditionsV3X1)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_mesh_v1alpha1_condition_route_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_mesh_v1alpha1_condition_route_proto_goTypes,
		DependencyIndexes: file_api_mesh_v1alpha1_condition_route_proto_depIdxs,
		MessageInfos:      file_api_mesh_v1alpha1_condition_route_proto_msgTypes,
	}.Build()
	File_api_mesh_v1alpha1_condition_route_proto = out.File
	file_api_mesh_v1alpha1_condition_route_proto_rawDesc = nil
	file_api_mesh_v1alpha1_condition_route_proto_goTypes = nil
	file_api_mesh_v1alpha1_condition_route_proto_depIdxs = nil
}
