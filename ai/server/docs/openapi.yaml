openapi: 3.0.1
info:
  title: Agent
  description: ""
  version: 1.0.0
tags:
  - name: 聊天
  - name: 会话管理
paths:
  /ai/chat/stream:
    post:
      summary: 流式聊天
      deprecated: false
      description: >-
        使用Server-Sent
        Events实现的流式聊天，实时接收AI响应。第一次调用时创建新session，完成后通过X-Session-ID响应头返回session_id。后续对话通过X-Session-ID请求头传递session_id
      operationId: streamChat
      tags:
        - 聊天
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
            example:
              message: 你是谁
              sessionID: session_test
      responses:
        "200":
          description: 流式响应
          content:
            text/event-stream:
              schema:
                type: string
                format: binary
              example: >
                event: start

                data:
                {"session_id":"sess_20240118143022_abcd1234","status":"processing"}


                event: message_start

                data:
                {"type":"message_start","message":{"id":"msg_sess_123_1642512185000","role":"assistant","type":"message","session_id":"sess_123"}}


                event: content_block_start

                data:
                {"type":"content_block_start","index":0,"content_block":{"type":"text"}}


                event: content_block_delta

                data:
                {"type":"content_block_delta","index":0,"delta":{"text":"正在分析"}}


                event: content_block_delta

                data:
                {"type":"content_block_delta","index":0,"delta":{"text":"服务调用链路..."}}


                event: content_block_stop

                data: {"type":"content_block_stop","index":0}


                event: message_delta

                data:
                {"type":"message_delta","delta":{"stop_reason":"end_turn"}}


                event: message_stop

                data: {"type":"message_stop"}


                event: done

                data: {"status":"completed"}
          headers:
            X-Session-ID:
              description: 会话ID，用于后续对话
              schema:
                type: string
                example: sess_20240118143022_abcd1234
        "400":
          description: 请求参数错误
          content:
            application/json:
              schema:
                type: object
                properties: {}
              example:
                message: "Invalid request: message is required"
                request_id: req_20240118143022_abcd12
                timestamp: 1642512185
          headers: {}
        "500":
          description: 服务器内部错误
          content:
            application/json:
              schema:
                type: object
                properties: {}
              example:
                message: "AI processing failed: model unavailable"
                request_id: req_20240118143022_abcd12
                timestamp: 1642512185
          headers: {}
      security: []
  /ai/sessions:
    post:
      summary: 创建会话
      deprecated: false
      description: 创建新的聊天会话
      operationId: createSession
      tags:
        - 会话管理
      parameters: []
      responses:
        "200":
          description: 会话创建成功
          content:
            application/json:
              schema:
                type: object
                properties: {}
              example:
                message: success
                data:
                  session_id: sess_20240118143022_abcd1234
                  created_at: "2024-01-18T14:30:22Z"
                  updated_at: "2024-01-18T14:30:22Z"
                  message_count: 0
                  status: active
                request_id: req_20240118143022_efgh56
                timestamp: 1642512185
          headers: {}
        "500":
          description: 服务器内部错误
          content:
            application/json:
              schema:
                type: object
                properties: {}
              example:
                message: "AI processing failed: model unavailable"
                request_id: req_20240118143022_abcd12
                timestamp: 1642512185
          headers: {}
      security: []
    get:
      summary: 列出会话
      deprecated: false
      description: 获取所有活跃会话列表
      operationId: listSessions
      tags:
        - 会话管理
      parameters: []
      responses:
        "200":
          description: 会话列表
          content:
            application/json:
              schema:
                type: object
                properties: {}
          headers: {}
      security: []
  /ai/sessions/{sessionId}:
    get:
      summary: 获取会话信息
      deprecated: false
      description: 获取特定会话的详细信息
      operationId: getSession
      tags:
        - 会话管理
      parameters:
        - name: sessionId
          in: path
          description: 会话ID
          required: true
          example: ""
          schema:
            type: string
            example: sess_20240118143022_abcd1234
      responses:
        "200":
          description: 会话信息
          content:
            application/json:
              schema:
                type: object
                properties: {}
          headers: {}
        "404":
          description: 资源未找到
          content:
            application/json:
              schema:
                type: object
                properties: {}
              example:
                message: Session not found
                request_id: req_20240118143022_abcd12
                timestamp: 1642512185
          headers: {}
      security: []
    delete:
      summary: 删除会话
      deprecated: false
      description: 删除指定的会话及其所有历史记录
      operationId: deleteSession
      tags:
        - 会话管理
      parameters:
        - name: sessionId
          in: path
          description: 会话ID
          required: true
          example: ""
          schema:
            type: string
            example: sess_20240118143022_abcd1234
      responses:
        "200":
          description: 删除成功
          content:
            application/json:
              schema:
                type: object
                properties: {}
          headers: {}
        "404":
          description: 资源未找到
          content:
            application/json:
              schema:
                type: object
                properties: {}
              example:
                message: Session not found
                request_id: req_20240118143022_abcd12
                timestamp: 1642512185
          headers: {}
      security: []
components:
  schemas: {}
  securitySchemes: {}
servers: []
security: []
