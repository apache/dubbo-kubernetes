var h=Object.defineProperty;var p=(u,e,t)=>e in u?h(u,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):u[e]=t;var o=(u,e,t)=>(p(u,typeof e!="symbol"?e+"":e,t),t);import{ah as c}from"./index-vn9A3gdz.js";class m{constructor(e){o(this,"enabled",!0);o(this,"hasMatch",!1);o(this,"side","provider");o(this,"matches",[]);o(this,"parameters",[]);o(this,"matchesKeys",[]);o(this,"parametersKeys",[]);o(this,"parametersValue",{retries:{type:"obj",relation:"=",value:""},timeout:{type:"obj",relation:"=",value:""},accesslog:{type:"obj",relation:"=",value:""},weight:{type:"obj",relation:"=",value:""},other:{type:"free",arr:[{key:"",relation:"=",value:""}]}});o(this,"matchesValue",{address:{type:"obj",relation:"",value:""},providerAddress:{type:"obj",relation:"",value:""},service:{type:"arr",arr:[{key:"oneof",relation:"",value:""}]},application:{type:"arr",arr:[{key:"oneof",relation:"",value:""}]},param:{type:"free",arr:[{key:"",relation:"",value:""}]}});if(e){for(let t of Object.keys(this))e[t]&&(this[t]=e[t]);this.hasMatch=this.matchesKeys.length>0}}descMatches(){let e=[];for(let t in this.matchesValue){let a=this.matchesValue[t];if(this.matchesKeys.includes(t))if(a.type==="obj")e.push(`${t} ${a.relation} ${a.value}`);else if(a.type==="arr"){let l=a.arr.map(r=>`${r.relation} ${r.value}`).join(", ");e.push(`${t} oneof [${l}]`)}else{let l=a.arr.map(r=>`${r.key} ${r.relation} ${r.value}`).join(", ");e.push(`${t} allof [${l}]`)}}return e}descParameters(){let e=[];for(let t in this.parametersValue){let a=this.parametersValue[t];this.parametersKeys.includes(t)&&(a.type==="obj"?e.push(`${t} = ${a.value}`):e.push(...a.arr.map(l=>`${l.key} ${l.relation} ${l.value}`)))}return e}delArrConfig(e,t,a){e[t].arr.splice(a,1)}addArrConfig(e,t,a,l){e[t].arr.splice(a+1,0,{key:"",relation:(l==null?void 0:l.relation)||"",value:""})}parseMatches(e){let t=this.matchesValue;for(let a in e){this.matchesKeys.push(a),this.hasMatch=!0;let l=e[a];if(t[a])if(t[a].type==="obj")for(let r in l)t[a].relation=r,t[a].value=l[r];else if(t[a].type==="arr"){t[a].arr=[];for(let r in l)for(let i of l[r])for(let s in i)t[a].arr.push({key:r,relation:s,value:i[s]})}else{t[a].arr=[];for(let r of l)for(let i in r.value)t[a].arr.push({key:r.key,relation:i,value:r.value[i]})}}}parseParameters(e){let t=this.parametersValue;for(let a in e){let l=e[a];if(this.parametersValue[a])this.parametersKeys.push(a),t[a].relation="=",t[a].value=l;else{let r="other";this.parametersKeys.push(r),t[r].arr=[],t[r].arr.push({key:a,relation:"=",value:l})}}}checkArrConfig(e,t,a,l){for(let r of t){let i=a[r];if(i.type==="obj"){if(i.relation===null||i.relation==="")return l.push(`${e}: ${r} 条件为空`),console.log(`${e}: ${r} 条件为空`),!1;if(i.value===null)return l.push(`${e}: ${r} 值为空`),console.log(`${e}: ${r} 值为空`),!1}if(i.type==="arr")for(let s of i.arr){if(s.relation===null||s.relation==="")return l.push(`${e}: ${r} 条件为空`),console.log(`${e}: ${r} 条件为空`),!1;if(s.value===null)return l.push(`${e}: ${r} 值为空`),console.log(`${e}: ${r} 值为空`),!1}else{let s=1;if(!i.arr)continue;for(let n of i.arr){if(n.relation===null||n.relation==="")return l.push(`${e}: ${r} 下第${s}条记录key为空`),console.log(`${e}: ${r} 下第${s}条记录key为空`),!1;if(n.relation===null||n.relation==="")return l.push(`${e}: ${r} 下第${s}条记录条件为空`),console.log(`${e}: ${r} 下第${s}条记录条件为空`),!1;if(n.value===null)return l.push(`${e}: ${r} 第${s}条记录值为空`),console.log(`${e}: ${r} 第${s}条记录值为空`),!1;s++}}}return console.log(3333),!0}}class y{constructor(){o(this,"ruleName");o(this,"scope");o(this,"configVersion");o(this,"key");o(this,"effectTime");o(this,"enabled")}}class g{constructor(){o(this,"basicInfo",new y);o(this,"config",[]);o(this,"errorMsg",[])}fromData(e){this.basicInfo=e.basicInfo,this.config=e.config}fromApiOutput(e){this.basicInfo.configVerison=e.configVerison||"v3.0",this.basicInfo.scope=e.scope,this.basicInfo.key=e.key,this.basicInfo.enabled=e.enabled||!1,this.config=e.configs.map(t=>{let a=new m({enabled:t.enabled,side:t.side});return a.parseMatches(t.match),a.parseParameters(t.parameters),a})}toApiInput(e=!1){return this.errorMsg=[],{ruleName:this.basicInfo.ruleName==="_tmp"?this.basicInfo.key+".configurators":this.basicInfo.ruleName,scope:this.basicInfo.scope,key:this.basicInfo.key,enabled:this.basicInfo.enabled,configVersion:this.basicInfo.configVerison||"v3.0",configs:this.config.map((a,l)=>{const r={},i={};if(e){if(a.parametersKeys.length===0)throw this.errorMsg.push(`配置 ${l+1}${c.global.t("dynamicConfigDomain.configType")} 不能为空`),loading.value=!1,new Error("数据检查失败");if(!(a.checkArrConfig(`配置 ${l+1}${c.global.t("dynamicConfigDomain.matchType")} 检查失败`,a.matchesKeys,a.matchesValue,this.errorMsg)&&a.checkArrConfig(`配置 ${l+1}${c.global.t("dynamicConfigDomain.configType")}  检查失败`,a.parametersKeys,a.parametersValue,this.errorMsg)))throw new Error("数据检查失败")}for(let s of a.matchesKeys){let n=a.matchesValue[s];if(n.type==="obj")r[s]={[n.relation]:n.value};else if(n.type==="arr")r[s]={oneof:n.arr.map(f=>({[f.relation]:f.value}))};else{r[s]=[];for(let f of n.arr)r[s].push({key:f.key,value:{[f.relation]:f.value}})}}for(let s of a.parametersKeys){let n=a.parametersValue[s];if(n.type==="obj")i[s]=n.value;else{r[s]={};for(let f of n.arr)i[f.key]=f.value}}return{match:r,parameters:i,enabled:a.enabled,side:a.side}})}}}export{m as C,g as V};
