# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

_internal_default_values_not_set:
  ## Whether to enable the zookeeper.
  enabled: false
  ## Number of replicas for the Deployment.
  replicas: 1
  ## Configure the application image
  image:
    # Source of the container image.
    registry: zookeeper
    # Version tag of the container image.
    tag: latest
    # Image pull policy, available options are: Always, IfNotPresent, Never.
    imagePullPolicy: IfNotPresent
    # Set to 'true' to enable debug mode for the image.
    debug: false

  resources:
    requests:
      cpu: 250m
      memory: 256Mi

  # This allows a dedicated log device to be used, and helps avoid competition between logging and snapshots.
  dataLogDir: ""
  # tickTime Basic time unit (in milliseconds) used by ZooKeeper for heartbeats.
  tickTime: 2000
  # initLimit ZooKeeper uses to limit the length of time the ZooKeeper servers in quorum have to connect to a leader.
  initLimit: 10
  # syncLimit How far out of date a server can be from a leader.
  syncLimit: 5
  # preAllocSize Block size for transaction log file.
  preAllocSize: 65536
  # snapCount The number of transactions recorded in the transaction log before a snapshot can be taken (and the transaction log rolled).
  snapCount: 100000
  # fourlwCommandsWhitelist A list of comma separated Four Letter Words commands that can be executed.
  fourlwCommandsWhitelist: srvr, mntr, ruok
  # listenOnAllIPs Allow ZooKeeper to listen for connections from its peers on all available IP addresses.
  listenOnAllIPs: false
  # Ongoing data directory cleanup configuration
  autopurge:
    # snapRetainCount The most recent snapshots amount (and corresponding transaction logs) to retain.
    snapRetainCount: 3
    # purgeInterval The time interval (in hours) for which the purge task has to be triggered.
    purgeInterval: 0
  # maxClientCnxns Limits the number of concurrent connections that a single client may make to a single member of the ZooKeeper ensemble.
  maxClientCnxns: 60
  # maxSessionTimeout Maximum session timeout (in milliseconds) that the server will allow the client to negotiate.
  maxSessionTimeout: 40000
  # heapSize Size (in MB) for the Java Heap options (Xmx and Xms).
  heapSize: 1024
  # logLevel Log level for the ZooKeeper server. ERROR by default.
  logLevel: ERROR
  # authentication parameters.
  auth:
    # authentication client settings.
    client:
      # auth.client.enabled Enable ZooKeeper client-server authentication. It uses SASL/Digest-MD5.
      enabled: false
      # auth.client.clientUser User that will use ZooKeeper clients to auth.
      clientUser: ""
      # auth.client.clientPassword Password that will use ZooKeeper clients to auth.
      clientPassword: ""
      # auth.client.serverUsers Comma, semicolon or whitespace separated list of user to be created.
      serverUsers: ""
      # auth.client.serverPasswords Comma, semicolon or whitespace separated list of passwords to assign to users when created.
      serverPasswords: ""
      # auth.client.existingSecret Use existing secret (ignores previous passwords).
      existingSecret: ""
    # authentication quorum settings.
    quorum:
      # auth.quorum.enabled Enable ZooKeeper server-server authentication. It uses SASL/Digest-MD5.
      enabled: false
      # auth.quorum.learnerUser User that the ZooKeeper quorumLearner will use to authenticate to quorumServers.
      learnerUser: ""
      # auth.quorum.learnerPassword Password that the ZooKeeper quorumLearner will use to authenticate to quorumServers.
      learnerPassword: ""
      # auth.quorum.serverUsers Comma, semicolon or whitespace separated list of users for the quorumServers.
      serverUsers: ""
      # auth.quorum.serverPasswords Comma, semicolon or whitespace separated list of passwords to assign to users when created.
      serverPasswords: ""
      # auth.quorum.existingSecret Use existing secret (ignores previous passwords).
      existingSecret: ""