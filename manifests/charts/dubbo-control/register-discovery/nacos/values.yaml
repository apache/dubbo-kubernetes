_internal_default_values_not_set:
  global:
    dubboNamespace: dubbo-system
nacos:
  ## Whether to enable the nacos.
  enabled: true
  ## Specifies the mode in which nacos is running (standalone, cluster, etc.).
  mode: standalone
  ## Override the namespace where the resource is deployed.
  namespaceOverride: ~
  ## Labels to attach to the resource.
  labels: ~
  ## Annotations to attach to the resource.
  annotations: ~
  ## Specifies the cluster's domain name for DNS resolution.
  clusterDomain: cluster.local
  ## Number of replicas for the Deployment.
  replicas: 1
  plugin:
    # Whether to enable the plugin.
    enabled: true
    # Configure the container image for the plugin.
    image:
      # Docker registry where the plugin image is hosted.
      registry: nacos/nacos-peer-finder-plugin
      # Specifies the image tag to use.
      tag: 1.1
      # Image pull policy (IfNotPresent, Always, Never).
      pullPolicy: IfNotPresent
  ## Configure the application image
  image:
    # Source of the container image.
    registry: docker.io/nacos/nacos-server
    # Version tag of the container image.
    tag: v2.2.3
    # Image pull policy, available options are: Always, IfNotPresent, Never.
    pullPolicy: IfNotPresent
  securityContext:
    # Whether to enable the security context.
    enabled: true
    # Defines the POSIX group ID that owns the pod's volumes.
    fsGroup: 1001
  containerSecurityContext:
    # Whether to enable the container security context.
    enabled: true
    # Specifies the user ID under which the container should run.
    runAsUser: 1001
    # Set to 'true' to run the container as a non-root user.
    runAsNonRoot: true
    # Set to 'false' to disallow privilege escalation for the container.
    allowPrivilegeEscalation: false
  service:
    # Labels to be applied to the service.
    labels: ~
    # Annotations to be added to the service.
    annotations: ~
    # Specifies the service type (ClusterIP, NodePort, LoadBalancer, etc.).
    type: NodePort
    # Specifies the ClusterIP for the service, or use "~" to auto-assign.
    clusterIP: ~
    # List of external IPs to associate with the service.
    externalIPs: ~
    # Specifies the IP address for a LoadBalancer service.
    loadBalancerIP: ~
    # Restrict access to the LoadBalancer by IP ranges.
    loadBalancerSourceRanges: ~
    # Specifies the LoadBalancer class (if applicable).
    loadBalancerClass: ~
    # Specifies the session affinity mode (None, ClientIP)
    sessionAffinity: None
    # Set to 'true' to publish endpoints for not-ready pods.
    publishNotReadyAddresses: true
  startupProbe:
    # Delay before the probe is initiated.
    initialDelaySeconds: 180
    # How often to perform the probe.
    periodSeconds: 5
    # Time to wait for the probe to complete.
    timeoutSeconds: 10
    # Perform an HTTP GET request to check.
    httpGet:
      # The protocol used for the HTTP GET request (HTTP, HTTPS).
      scheme: HTTP
      # The port on which the HTTP GET request will be made.
      port: 8848
      # The path to use for the HTTP GET request.
      path: /nacos/v1/console/health/readiness
  readinessProbe:
    # Delay before the probe is initiated.
    initialDelaySeconds: 10
    # How often to perform the probe.
    periodSeconds: 5
    # Time to wait for the probe to complete.
    timeoutSeconds: 10
    # Perform an HTTP GET request to check.
    httpGet:
      # The protocol used for the HTTP GET request (HTTP, HTTPS).
      scheme: HTTP
      # The port on which the HTTP GET request will be made.
      port: 8848
      # The path to use for the HTTP GET request.
      path: /nacos/v1/console/health/readiness
  livenessProbe:
    # Delay before the probe is initiated.
    initialDelaySeconds: 10
    # How often to perform the probe.
    periodSeconds: 5
    # Time to wait for the probe to complete.
    timeoutSeconds: 10
    # Perform an HTTP GET request to check.
    httpGet:
      # The protocol used for the HTTP GET request (HTTP, HTTPS).
      scheme: HTTP
      # The port on which the HTTP GET request will be made.
      port: 8848
      # The path to use for the HTTP GET request.
      path: /nacos/v1/console/health/liveness
  resources:
    # Maximum CPU and memory resources allowed for the container.
    limits:
      # CPU usage limit.
      cpu: ~
      # Memory usage limit.
      memory: ~
    # Initial CPU and memory resource requests for the container.
    requests:
      # CPU usage request.
      cpu: ~
      # Memory usage request.
      memory: ~
  # Specifies the port on which the server should run.
  serverPort: 8848
  # Specifies the preferred host mode (e.g., 'hostname').
  preferhostmode: ~
  storage:
    # Specifies the storage type (embedded, mysql, etc.).
    type: embedded
    # For MySQL storage, you need to change the "embedded" to "mysql" before you can use the db configuration.
    db:
      # Specifies the database host.
      host: localhost
      # Specifies the database name.
      name: nacos
      # Specifies the database port.
      port: 3306
      # Specifies the database username.
      username: mysql
      # Specifies the database password.
      password: passw0rd
      # Additional database connection parameters (if needed).
      param: ""