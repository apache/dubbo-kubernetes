{{- $jobs := .Values.jobs -}}
{{- $prom := .Values.kubePrometheus }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: jobs-env
  namespace: {{ template "admin.namespace" . }}
  labels:
  {{- include "jobs.labels" . | nindent 4 }}
  annotations:
  {{- include "jobs.env.annotations" . | nindent 4 }}
data:
  helm.sh: |-
   #!/bin/bash
    set -eux
    {{- if (eq $prom.enabled true) }}
    PROMETHEUS="https://prometheus-community.github.io/helm-charts"

    helm pull {{ include "prom.stack.name" . }} --repo "$PROMETHEUS" --version {{ $prom.image.tag }} --untar && \

    for i in {1..5}; do
    if rm -rf "{{ include "prom.stack.name" . }}-{{ $prom.image.tag }}.tgz"; then
    break
    else
    echo "Attempt $i: Failed to remove directory, retrying in 2 seconds..."
    sleep 2
    fi
    done
    cp -r "/files/dashboards/dubbo-resources-metrics.yaml" "{{ include "prom.stack.name" . }}/templates/{{ include "grafana.name" . }}/dashboards-{{ $prom.dashboardsVersion }}"
    ls -la "{{ include "prom.stack.name" . }}/templates/{{ include "grafana.name" . }}/dashboards-{{ $prom.dashboardsVersion }}"

    if helm ls --all | grep "{{ include "prom.name" . }}"; then
    helm uninstall {{ include "prom.name" . }} -n dubbo-system && helm install {{ include "prom.name" . }} "./{{ include "prom.stack.name" . }}/" -n dubbo-system
    else
    helm install {{ include "prom.name" . }} "./{{ include "prom.stack.name" . }}/" -n dubbo-system
    fi
    {{- end }}
  dubbo-resources-metrics.yaml: |-
    {{- .Files.Get "files/dashboards/dubbo-resources-metrics.yaml" | nindent 4 }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: dubbo-job-create
  namespace: {{ template "admin.namespace" . }}
  labels:
  {{- include "jobs.labels" . | nindent 4 }}
  annotations:
  {{- include "jobs.2.annotations" . | nindent 4 }}
spec:
  template:
    metadata:
      name: dubbo-job-create
    spec:
      serviceAccountName: job-sa
      restartPolicy: {{ $jobs.restartPolicy }}
      dnsPolicy: None
      dnsConfig:
        nameservers:
        - 8.8.8.8
        searches:
        - default.svc.cluster.local
        - svc.cluster.local
        - cluster.local
      containers:
      - name: helm
        image: alpine/helm:3.16.2
        imagePullPolicy: IfNotPresent
        command:
        - "/bin/sh"
        - "-c"
        - "sh /files/helm.sh"
        volumeMounts:
        - name: scripts
          mountPath: /files/helm.sh
          subPath: helm.sh
        - name: scripts
          mountPath: /files/dashboards/dubbo-resources-metrics.yaml
          subPath: dubbo-resources-metrics.yaml
      volumes:
      - name: scripts
        configMap:
          name: jobs-env
          defaultMode: 0755
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: job-sa
  namespace: {{ template "admin.namespace" . }}
  annotations:
  {{- include "jobs.sa.annotations" . | nindent 4 }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: job-sa-binding
  annotations:
  {{- include "jobs.sa.annotations" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: job-sa
  namespace: {{ template "admin.namespace" . }}