apiVersion: v1
kind: ServiceAccount
metadata:
  name: dubbo-kubernetes-ingress-controller
  namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dubbo-kubernetes-ingress-controller-clusterRole
rules:
  - apiGroups: [""]
    resources: ["services", "secrets"]
    verbs: ["get", "watch", "list"]
  - apiGroups: ["extensions", "networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get", "watch", "list", "update"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses/status"]
    verbs: ["update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dubbo-kubernetes-ingress-controller-clusterRoleBinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dubbo-kubernetes-ingress-controller-clusterRole
subjects:
  - kind: ServiceAccount
    name: dubbo-kubernetes-ingress-controller
    namespace: {{ .Release.Namespace }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dubbo-kubernetes-ingress-controller
  namespace: {{ .Release.Namespace }}
  labels:
    app: ingress-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ingress-controller
  template:
    metadata:
      labels:
        app: ingress-controller
    spec:
      hostNetwork: true
      serviceAccountName: dubbo-kubernetes-ingress-controller
      containers:
      - name: dubbo-kubernetes-ingress-controller
        image: docker.io/mfordjody/dubbo-kubernetes-ingress-controller:dev
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: "100m"
            memory: "100Mi"
          requests:
            cpu: "100m"
            memory: "100Mi"
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: dubbo
spec:
  controller: "dubbo.io/dubbo-kubernetes-ingress-controller"
---
{{ $ingress := .Values.ingress }}
{{- $ca := genCA "dubbo-kubernetes-ca" 365 }}
{{- $cert := genSignedCert "" nil (list "dubbo-kubernetes-user") 365 $ca }}
apiVersion: v1
kind: Secret
metadata:
  name: dubbo-kubernetes-ingress-tls
  namespace: {{ .Release.Namespace }}
type: kubernetes.io/tls
data:
  tls.crt: {{ $cert.Cert | b64enc | quote }}
  tls.key: {{ $cert.Key | b64enc | quote }}
  ca.crt: {{ $ca.Cert | b64enc | quote }}
