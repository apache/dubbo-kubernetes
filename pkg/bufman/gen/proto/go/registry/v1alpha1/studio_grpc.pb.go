// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: registry/v1alpha1/studio.proto

package registryv1alpha1

import (
	context "context"
)

import (
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	StudioService_ListStudioAgentPresets_FullMethodName = "/bufman.dubbo.apache.org.registry.v1alpha1.StudioService/ListStudioAgentPresets"
	StudioService_SetStudioAgentPresets_FullMethodName  = "/bufman.dubbo.apache.org.registry.v1alpha1.StudioService/SetStudioAgentPresets"
)

// StudioServiceClient is the client API for StudioService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type StudioServiceClient interface {
	// ListStudioAgentPresets returns a list of agent presets in the server.
	ListStudioAgentPresets(ctx context.Context, in *ListStudioAgentPresetsRequest, opts ...grpc.CallOption) (*ListStudioAgentPresetsResponse, error)
	// SetStudioAgentPresets sets the list of agent presets in the server.
	SetStudioAgentPresets(ctx context.Context, in *SetStudioAgentPresetsRequest, opts ...grpc.CallOption) (*SetStudioAgentPresetsResponse, error)
}

type studioServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewStudioServiceClient(cc grpc.ClientConnInterface) StudioServiceClient {
	return &studioServiceClient{cc}
}

func (c *studioServiceClient) ListStudioAgentPresets(ctx context.Context, in *ListStudioAgentPresetsRequest, opts ...grpc.CallOption) (*ListStudioAgentPresetsResponse, error) {
	out := new(ListStudioAgentPresetsResponse)
	err := c.cc.Invoke(ctx, StudioService_ListStudioAgentPresets_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studioServiceClient) SetStudioAgentPresets(ctx context.Context, in *SetStudioAgentPresetsRequest, opts ...grpc.CallOption) (*SetStudioAgentPresetsResponse, error) {
	out := new(SetStudioAgentPresetsResponse)
	err := c.cc.Invoke(ctx, StudioService_SetStudioAgentPresets_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StudioServiceServer is the server API for StudioService service.
// All implementations must embed UnimplementedStudioServiceServer
// for forward compatibility
type StudioServiceServer interface {
	// ListStudioAgentPresets returns a list of agent presets in the server.
	ListStudioAgentPresets(context.Context, *ListStudioAgentPresetsRequest) (*ListStudioAgentPresetsResponse, error)
	// SetStudioAgentPresets sets the list of agent presets in the server.
	SetStudioAgentPresets(context.Context, *SetStudioAgentPresetsRequest) (*SetStudioAgentPresetsResponse, error)
	mustEmbedUnimplementedStudioServiceServer()
}

// UnimplementedStudioServiceServer must be embedded to have forward compatible implementations.
type UnimplementedStudioServiceServer struct {
}

func (UnimplementedStudioServiceServer) ListStudioAgentPresets(context.Context, *ListStudioAgentPresetsRequest) (*ListStudioAgentPresetsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListStudioAgentPresets not implemented")
}
func (UnimplementedStudioServiceServer) SetStudioAgentPresets(context.Context, *SetStudioAgentPresetsRequest) (*SetStudioAgentPresetsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetStudioAgentPresets not implemented")
}
func (UnimplementedStudioServiceServer) mustEmbedUnimplementedStudioServiceServer() {}

// UnsafeStudioServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to StudioServiceServer will
// result in compilation errors.
type UnsafeStudioServiceServer interface {
	mustEmbedUnimplementedStudioServiceServer()
}

func RegisterStudioServiceServer(s grpc.ServiceRegistrar, srv StudioServiceServer) {
	s.RegisterService(&StudioService_ServiceDesc, srv)
}

func _StudioService_ListStudioAgentPresets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListStudioAgentPresetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudioServiceServer).ListStudioAgentPresets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StudioService_ListStudioAgentPresets_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudioServiceServer).ListStudioAgentPresets(ctx, req.(*ListStudioAgentPresetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StudioService_SetStudioAgentPresets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetStudioAgentPresetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudioServiceServer).SetStudioAgentPresets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StudioService_SetStudioAgentPresets_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudioServiceServer).SetStudioAgentPresets(ctx, req.(*SetStudioAgentPresetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// StudioService_ServiceDesc is the grpc.ServiceDesc for StudioService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var StudioService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "bufman.dubbo.apache.org.registry.v1alpha1.StudioService",
	HandlerType: (*StudioServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListStudioAgentPresets",
			Handler:    _StudioService_ListStudioAgentPresets_Handler,
		},
		{
			MethodName: "SetStudioAgentPresets",
			Handler:    _StudioService_SetStudioAgentPresets_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "registry/v1alpha1/studio.proto",
}
